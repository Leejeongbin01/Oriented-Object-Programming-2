#include <iostream>
#include <vector>
using namespace std;

class order {
private:
	int cheese;
	int peperoni;
	int sausage;
	int mushroom;
	string customerName;
	string address;
public:
	void set(int c, int p, int s, int m, string name, string address);
	void set(string name, string address);
	void set(string name, string address, int c, int p, int s, int m);
	void display();

	order operator+(const order& right);
	order operator-(const order& right);

	friend order operator*(const order& left, const order& right);
};

void order::set(int c, int p, int s, int m, string name, string address) {
	cheese = c;
	peperoni = p;
	sausage = s;
	mushroom = m;
	customerName = name;
	this->address = address;
}

void order::set(string name, string address) {
	cheese = 0;
	peperoni = 0;
	sausage = 0;
	mushroom = 0;
	customerName = name;
	this->address = address;
}

void order::set(string name, string address, int c, int p, int s, int m) {
	this->address = address;
	customerName = name;
	cheese = c;
	peperoni = p;
	sausage = s;
	mushroom = m;
}

void order::display() {
	cout << "Name: " << customerName <<
		" Address: " << address <<
		" cheese: " << cheese <<
		" peperoni: " << peperoni <<
		" sausage: " << sausage <<
		" mushroom: " << mushroom << endl;
}

order order::operator+(const order& right) {
	order new_order;
	int tmpc = this->cheese + right.cheese;
	int tmpp = this->peperoni + right.peperoni;
	int tmps = this->sausage + right.sausage;
	int tmpm = this->mushroom + right.mushroom;
	new_order.set(tmpc, tmpp, tmps, tmpm, this->customerName, this->address);
	return new_order;
}

order order::operator-(const order& right) {
	order new_order;
	int tmpc = this->cheese - right.cheese;
	int tmpp = this->peperoni - right.peperoni;
	int tmps = this->sausage - right.sausage;
	int tmpm = this->mushroom - right.mushroom;
	new_order.set(tmpc, tmpp, tmps, tmpm, this->customerName, this->address);
	return new_order;
}
order operator*(const order& left, const order& right) {
	order new_order;
	int tmpc = left.cheese * right.cheese;
	int tmpp = left.peperoni * right.peperoni;
	int tmps = left.sausage * right.sausage;
	int tmpm = left.mushroom * right.mushroom;
	new_order.set(tmpc, tmpp, tmps, tmpm, left.customerName, left.address);
	return new_order;
}

class pizzaOrder {
private:
	vector<order*> orders;
public:
	pizzaOrder() {};
	void add(class order* o) {
		orders.push_back(o);
	}
	void display();
};

void pizzaOrder::display() {
	for (int i = 0; i < orders.size(); i++) {
		orders[i]->display();
	}
}

int main() {
	pizzaOrder orders;

	order o1, o2, o3;
	o1.set(1, 2, 3, 4, "Bart", "New York");
	orders.add(&o1);

	o2.set("Lisa", "New York");
	orders.add(&o2);

	o3.set("Homer", "New York", 10, 10, 10, 10);
	orders.add(&o3);

	orders.display();

	cout << endl;
	order o4 = o1 + o3;
	o4.display();

	cout << endl;
	order o5 = o1 - o3;
	o5.display();

	cout << endl;
	order o6 = o1 * o3;
	o6.display();


	return 0;
}
